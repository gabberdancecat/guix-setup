#!/usr/bin/env sh

## TODO: wifi module, all-round security checks (vpn,etc)

memory() {
	memory="$(free -h | sed -n "2s/\([^ ]* *\)\{2\}\([^ ]*\).*/\2/p")"
}

cpu() {
	cpu="$(grep -o "^[^ ]*" /proc/loadavg)"
}

disk() {
	disk="$(df -h | awk 'NR==2{print $4}')"
}

datetime() {
	datetime="$(date "+%a %d %b %I:%M %P")"
}

bat() {
	read -r bat_status </sys/class/power_supply/BAT0/status
	read -r bat_capacity </sys/class/power_supply/BAT0/capacity
	if [ "$bat_status" = "Charging" ]; then
	    bat_status="+"
	elif [ "$bat_status" = "Discharging" ]; then
	    bat_status="-"
	elif [ "$bat_status" = "Full" ]; then
	    bat_status="o"
	fi
	    
	bat="$bat_status $bat_capacity%"
}

vol() {
    # vol="$([ "$(pamixer --get-mute)" = "false" ] && printf "%s%%" "$(pamixer --get-volume)" || printf '-')"
    vol="$(volume-print-num.sh)"
}

internet() {
    echo "tmp"
}

display() {
	echo "all status [$memory $cpu $disk] [$bat] [$vol] [$datetime]" >"$FIFO"
}

printf "%s" "$$" > "$XDG_RUNTIME_DIR/status_pid"
FIFO="$XDG_RUNTIME_DIR/sandbar"
[ -e "$FIFO" ] || mkfifo "$FIFO"
sec=0

while true; do
	sleep 1 &
	wait && {
		[ $((sec % 15)) -eq 0 ] && memory
		[ $((sec % 15)) -eq 0 ] && cpu
		[ $((sec % 15)) -eq 0 ] && disk
		[ $((sec % 30)) -eq 0 ] && bat
		[ $((sec % 5)) -eq 0 ] && vol
		[ $((sec % 5)) -eq 0 ] && datetime

		[ $((sec % 5)) -eq 0 ] && display

		sec=$((sec + 1))
	}
done
