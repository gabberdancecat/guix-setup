# -*- eval: (variable-pitch-mode 0); -*-

#+TITLE: Description:

* Guix System & various application configs

This repo contains my GNU Guix System configuration, along with various application configs. 

GNU Guix System is a Linux distribution that provides a declarative operating system configuration, just like NixOS. In this repo, I have configs that define everything ranging from system and user-level services, packages separated into manifests, filesystem layout, and much more.

The application configs in this repo include those for several Wayland compositors, several X window managers, sereval old emacs configs (newest one is hosted here: <link>), too many POSIX shellscripts, and etc.

* Info and navigation to parts of repo:

WIP

* Notes to self:

** Post-installation

make sure EVERYTHING is reproducible, in case this happens again

make snapshotting and store integrity-checking system, daily, or at least very frequently

.guix-profile is never updated, only .guix-extra-profiles. edit the script to ensure that the default profile is being upgraded as well!

To merge single files into another branch: [[https://jasonrudolph.com/blog/2009/02/25/git-tip-how-to-merge-specific-files-from-another-branch/][link]]

** TODO Now

Instead of tackling all at once, choose one for the day, and knock out all at once. Check things off one by one, and it'll be all taken out in 2~3 weeks?

- now:
  - [ ] snapper backups
  #+begin_src conf 
    # Use a lockfile so only one btrbk instance can run at a time
    lockfile                   /run/lock/btrbk.lock
    # Use sudo if btrbk or lsbtr is run by regular user
    backend_local_user         btrfs-progs-sudo
    # 
    snapshot_dir = /.snapshots
    target_dir = /

    volume /
      target /media/backup/home_backups
      snapshot_preserve 2 # keep only 2 snapshots
      target_preserve 2   # only copy 2 snapshots to target
      subvolume home

    volume /home
      subvolume /path/to/home
      snapshot_preserve = 2         # Keep only 2 snapshots
      target_preserve = 2           # Only copy 2 snapshots to external drive
  #+end_src
  - [ ] rewrite emacs + org-mode config
  - [ ] nixos (https://youtu.be/nLwbNhSxLd4) <- description has so much stuff
  - [ ] soundcloud isolated electron app (issue is hardened browser)

- org
  - [ ] latex fragments, fragtog, completion.
    [[https://www.reddit.com/r/emacs/comments/o2g7a3/take_math_notes_in_emacs_org_mode/][reddit - take math notes in org]]
    [[https://github.com/io12/org-fragtog?tab=readme-ov-file][github - org-fragtog]]
    [[https://orgmode.org/manual/Previewing-LaTeX-fragments.html][gnu org manual - latex fragment previewing]]
    [[https://github.com/Nyoho/.emacs.d/blob/41b1932304e33c93e6bc316c068d6b5d635ed910/config/50-org.el#L400-L431][example org latex yasauctex setup]]
  - [ ] literate calc mode for math notes [[https://github.com/sulami/literate-calc-mode.el?tab=readme-ov-file][repo]]
  - [ ] org-roam (easy searching everything! all notes!)

- desktop
  - [ ] sandbar customization: slightly darker bg, slightly whiter fg...
  - [ ] wifi indicator (?maybe find a pre-made script for statusbar?)
  - [ ] script to toggle disable-while-typing (much easier in guile?)
    [[https://codeberg.org/river/river/src/branch/master/doc/riverctl.1.scd][riverctl docs, commands]]
  - [ ] go through other's river configs to learn
  - [ ] write river lisp config
    [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Multi_002dfile-Packages.html][loading dependency files for elisp?]]
  - [ ] river new argument to toggle opening new window at top of stack or one below.

- fonts
  - [ ] install and test leggie, profont, gohufont-nerd,
    [[https://github.com/wikkyk/leggie][font - leggie]]
    [[https://tobiasjung.name/profont/index.php?fs=18&pf=on][font - profont]]
  - [ ] patch tamzen nerd fonts using script, test on statusbar.
    [[https://github.com/ryanoasis/nerd-fonts?tab=readme-ov-file#font-patcher][nerd patcher usage]]

- fonts (emacs)
  - [ ] proper emacs symbols fonts
    [[https://www.shimmy1996.com/en/posts/2018-06-24-fun-with-fonts-in-emacs/][custom ultimate fontset tutorial]]

- guix
  - [ ] write packages:
    sliver https://sliver.sh/docs?name=Compile+from+Source
    python bemenu [[https://github.com/firecat53/networkmanager-dmenu/tree/main][proj repo]]
    wk [[https://github.com/3L0C/wk][proj repo]]
  - [ ] publish onto official repos
  - [ ] lem pkgbuild

- emacs
  - [ ] workspaces with butler
    [[https://github.com/alphapapa/bufler.el][github repo - bufler]]
  - [ ] rss:
    read docs for fancier workflows
    new repos im maintaining
  - [ ] configure lsp:
    [[https://stackoverflow.com/questions/69934/set-4-space-indent-in-emacs-in-text-mode][indentation and tab width]]
    read through docs, lots to learn, valuable
  - [ ] shape into an emacs distribution

- cyber
  - [ ] pwn, now
  - [ ] build rz-ghidra using instructions and add as plugin
  - [ ] write a guix pkg-build for rz-ghidra
  - [X] create throwaway google phone number for next ctf

- system
  - [ ] make script wrapper to dl every song from a playlist (goes hard) on soundcloud
  - [ ] read geiser docs
  - [ ] write scripts in guile [[https://www.gnu.org/software/guile/manual/html_node/The-Top-of-a-Script-File.html][docs]]
    [[https://gitlab.com/a-sassmannshausen/guile-hall][guile-hall docs]]
  - [ ] guix upkeep script (guile?)
    verify store integrity, btrfs snapshots!, etc

- misc
  - [ ] buy coffe mug from amazon
  - [ ] explore deep naked flames vids

   
+ [ ] keyfile encryption boot skip
  - [ ] create guix iso image with wm and emacs n minimal home manager config!
  - [ ] Create persist subvol from chroot, reconfigure, if work, try adding keyfile in /persist/key-file.cpio, hope it works.
  - [ ] test if zstd format works, only in root subvol (also noatime? what does that even do?)
+ [ ] vpn shuffle through mullvad vpns, set all to don't autoconnect except one random, will update next wake from sleep

Long future:
- improve and neaten arkenfox overrides into neater form
  - arkenfox-updater, keep expected firefox version in file, compare to output of "firefox --version" | regex !
- (l)figure out a way to fix stumpwm root user (get river all set up beforehand)
- personal website with photos, org mode?
- sign all commits in emacs repo?
- create music dir (bandcamp lolecore), have all local music on there, rsync to phone easily (in the future, homelab and stream?).
- make noise music generator in Scheme or something? copy from shizcow, reimplement.
- work on kernel configurator emacs lisp

